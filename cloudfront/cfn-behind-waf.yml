AWSTemplateFormatVersion: "2010-09-09"
Description: "CDN to allocate Frontend Static WebSite. 
  This template provides an static but securized site to hold this content.
  Create a bucket and a Cloudfront distribution and log bucket.
  This CDN is behing an WAF ACL and connected with lambda edge"

Parameters:

  DomainName:
    Type: String
    Description: The website domain name.
  SSLCertificateArn:
    Type: String
    Description: Certificate Arn
  wafWebACL:
    Type: String
    Description: WAF ACL id to associate to Cloudfront distribution (Owasp top 10 rules is a suitable option)
  pLambdaEdgeArn:
    Type: String

Resources:
  # A bucket to save the static web code
  StaticCodeWebBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "my-web-bucket"

  # Logs bucket. The content will be removed 45 days after its creation
  LogWebStaticBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "my-web-logs-bucket"
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 45
            Status: Enabled

  # CloudFront Origin Access Identity
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'CloudFront OAI'

  # Bucket Policy
  # - Reject any request of getting object by any aws account different to aws account owner of this bucket.
  # - Accept any request of getting object by aws account owner of this bucket.
  S3BucketPolicyPrivate:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticCodeWebBucket
      PolicyDocument:
        Statement:
        - Effect: Deny
          Action: s3:GetObject
          NotPrincipal:
            AWS: !Join [ ' ', [ 'arn:aws:iam::cloudfront:user/CloudFront', 'Origin', 'Access', 'Identity', !Ref CloudFrontOriginAccessIdentity ] ]
          Resource: !Sub 'arn:aws:s3:::${StaticCodeWebBucket}/*'
        - Effect: Allow
          Action: s3:GetObject
          Principal:
            AWS: !Join [ ' ', [ 'arn:aws:iam::cloudfront:user/CloudFront', 'Origin', 'Access', 'Identity', !Ref CloudFrontOriginAccessIdentity ] ]
          Resource: !Sub 'arn:aws:s3:::${StaticCodeWebBucket}/*'

  # Cloudfront distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        # Associate WAF to distribution.
        WebACLId: !Ref wafWebACL
        Aliases:
         - !Ref DomainName
        Enabled: true
        PriceClass: PriceClass_100
        Comment: 'MyApp Web Distribution'
        HttpVersion: http2
        IPV6Enabled: true
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLCertificateArn
          SslSupportMethod: 'sni-only'
        DefaultRootObject: index.html
        CustomErrorResponses:
        - ErrorCode: 403
          ResponsePagePath: "/index.html"
          ResponseCode: 200
          ErrorCachingMinTTL: 0
        - ErrorCode: 404
          ResponsePagePath: "/index.html"
          ResponseCode: 200
          ErrorCachingMinTTL: 0
        Origins:
        - DomainName:
            !Join [ "", [ !Ref StaticCodeWebBucket, ".s3.amazonaws.com" ] ]
          Id: myS3Origin
          S3OriginConfig:
            OriginAccessIdentity:
              !Join [ "", [ "origin-access-identity/cloudfront/", !Ref CloudFrontOriginAccessIdentity ] ]
        Logging:
          Bucket: !Join [ "", [ !Ref LogWebStaticBucket, ".s3.amazonaws.com" ] ]
          IncludeCookies: false
        DefaultCacheBehavior:
        # Lambda Edge config
          LambdaFunctionAssociations: 
            - EventType: viewer-request
              IncludeBody: False
              LambdaFunctionARN: !Ref pLambdaEdgeArn        
          Compress: true
          TargetOriginId: myS3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
          - GET
          - HEAD
          - DELETE
          - POST
          - OPTIONS
          - PUT
          - PATCH
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none

Outputs:
  WebsiteURL:
    Value: !Join
    - ''
    - - https://
      - !GetAtt CloudFrontDistribution.DomainName
      - /
    Description: WebSite URL

  CloudFrontDistributionDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Description: CloudFront Distribution Domain Name

  CloudFrontDistributionId:
    Value: !Ref CloudFrontDistribution
    Description: CloudFront Distribution ID
